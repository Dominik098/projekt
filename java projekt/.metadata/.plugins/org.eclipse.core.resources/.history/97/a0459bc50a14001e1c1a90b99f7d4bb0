<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ page import="java.sql.*" %>

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="C_kategorie.css" type="text/css">

    <link rel="icon" type="image/png" href="3.png" sizes="96x96" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"> <!-- do ikony użytkownika -->
    <title>Kategorie książek</title>
</head>

<body>
    <tr>
        <td align="center"><img src="logo.png" name="ksiazka" align="left" weight="90px" height="50px"></td>
    </tr>
    <h1>
        <center><u>Kategorie książek</u></center>
    </h1>
    <header>
        <nav>
            <ul>
                <li class="znacznik"><a href="A_strona-gl.jsp"><button class="wyloguj">Strona główna</button></a></li>
                <li class="znacznik"><a href="B_O bibiotece.jsp"><button class="wyloguj">O bibliotece</button></a></li>
                <li class="znacznik"><a href="C_Kategorie-książek.jsp"><button class="wyloguj">Kategorie książek</button></a></li>
                <!--   <li><a href="D_Wypożyczenia.jsp"><button class="pobierz" >Wypożyczane </a></li>-->
                <li class="znacznik"><a href="E_Słownik pojęć.jsp"><button class="wyloguj">Słownik pojęć bibliotecznych</button></a></li>
                <li class="znacznik"><a href="F_personel.jsp"><button class="wyloguj">Personel</button></a></li>
                <!-- <li class="znacznik"><a href="G_login.jsp">Logowanie</a></li>
                <li class="znacznik"><a href="H_rejestracja.jsp">Rejestracja</a></li>-->
                <li><a><%=session.getAttribute("administrator") %></a></li>
                <li><a href="info_o_koncie.jsp"><i class="fa fa-user"></i><button class="klik"><%=session.getAttribute("email-login") %></button></a></li>

                <li><a href="#" onclick="confirmLogout()"><button class="wyloguj">Wyloguj się</button></a></li>
            </ul>
        </nav>
    </header>

    <h1>Książki</h1>

    <%
    String userRole = (String) session.getAttribute("administrator");
    if (userRole != null && userRole.equals("admin")) {
    %>
    <a href="Dodaj_ksiazke.jsp">
        <button class="dodanie" onclick="return promptForPassword()">Przejdź do formularza<br> aby dodać książkę</button>
    </a>
    <% } %>

    <h3>Oto lista wszystkich książek dostępnych do wypożyczenia w bibliotece</h3>

    <table>
        <tr>
            <th>Lp.</th>
            <th>Tytuł</th>
            <th>Autor</th>
            <th>Wydawnictwo</th>
            <th>Data_publikacj</th>
            <th>Książki w formacie PDF</th>
            <th><center>Opcje</center></th>
        </tr>
        <%
        try {
            // Połączenie z bazą danych
            String url = "jdbc:mysql://localhost:3306/Biblioteka";
            String user = "root";
            String password = "P@ssw0rd";
            Connection conn = DriverManager.getConnection(url, user, password);

            // Zapytanie SQL - Pobranie listy książek
            String sql = "SELECT * FROM Książki";
            PreparedStatement ps = conn.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();

            // Wyświetlanie wyników zapytania
            int i = 0;
            while (rs.next()) {
                i++;
                int bookID = rs.getInt("numer_ID");
                String tytuł = rs.getString("tytuł");
                String autor = rs.getString("autor");
                String wydawnictwo = rs.getString("wydawnictwo");
                String data_publikacji = rs.getString("data_publikacji");
                String pdf_link = rs.getString("pdf");

                // Sprawdzanie, czy książka jest oznaczona jako ulubiona dla danego użytkownika
                String favoriteClass = "";
                String favoriteText = "Oznacz jako ulubioną";
                String userRole2 = (String) session.getAttribute("administrator");
                if (userRole2 != null && userRole2.equals("admin")) {
                    // Sprawdzanie, czy użytkownik jest zalogowany jako administrator
                    favoriteClass = "favorite-button hidden";
                } else {
                    // Sprawdzanie, czy książka jest oznaczona jako ulubiona dla danego użytkownika
                    String favoriteSql = "SELECT * FROM Ulubione WHERE numer_ID = ? AND email = ?";
                    PreparedStatement favoritePs = conn.prepareStatement(favoriteSql);
                    favoritePs.setInt(1, bookID);
                    favoritePs.setString(2, (String) session.getAttribute("email-login"));
                    ResultSet favoriteRs = favoritePs.executeQuery();

                    if (favoriteRs.next()) {
                        favoriteClass = "favorite-button favorite";
                        favoriteText = "Usuń z ulubionych";
                    }

                    favoriteRs.close();
                    favoritePs.close();
                }

                %>
                <tr>
                    <td><%= i %></td>
                    <td><%= tytuł %></td>
                    <td><%= autor %></td>
                    <td><%= wydawnictwo %></td>
                    <td><%= data_publikacji %></td>
                    <td>
                        <a href="<%= request.getContextPath() + pdf_link %>" target="_blank" download>
                            <button class="pobierz">Pobierz książkę</button>
                        </a>
                    </td>
                    <td>
                        <button onclick="toggleFavorite(<%= bookID %>)" class="<%= favoriteClass %>"><%= favoriteText %></button>
                    </td>
                </tr>
                <%
            }

            // Usunięcie książki z bazy danych po kliknięciu przycisku
            if (request.getParameter("deleteID") != null) {
                int deleteID = Integer.parseInt(request.getParameter("deleteID"));
                String deleteSql = "DELETE FROM Książki WHERE numer_ID = ?";
                PreparedStatement deletePs = conn.prepareStatement(deleteSql);
                deletePs.setInt(1, deleteID);
                deletePs.executeUpdate();
                deletePs.close();
                RequestDispatcher dispatcher = null;

                // Przekierowanie na stronę po usunięciu książki
                dispatcher = request.getRequestDispatcher("C_Kategorie-książek.jsp");
            }

            // Zamykanie połączenia z bazą danych
            rs.close();
            ps.close();
            conn.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
        %>
    </table>

    <script type="text/javascript">
        function deleteBook(id) {
            if (confirm("Czy na pewno chcesz usunąć książkę?")) {
                window.location.href = "C_Kategorie-książek.jsp?deleteID=" + encodeURIComponent(id);
                alert("Książka została pomyślnie usunięta.");
                location.reload(); // Odświeża stronę
            }
            location.reload(); // Odświeża stronę
        }

        function toggleFavorite(id) {
            var button = document.getElementById("favorite-button-" + id);
            var bookID = id;
            var userEmail = "<%= session.getAttribute(\"email-login\") %>";

            if (button.classList.contains("favorite")) {
                // Usuń z ulubionych
                button.classList.remove("favorite");
                button.textContent = "Oznacz jako ulubioną";

                // Wywołaj skrypt lub serwlet do usunięcia książki z ulubionych w bazie danych
                // Przykład z użyciem AJAX

                var xhr = new XMLHttpRequest();
                xhr.open("POST", "RemoveFromFavoritesServlet", true);
                xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4 && xhr.status === 200) {
                        console.log(xhr.responseText);
                    }
                };
                xhr.send("bookID=" + encodeURIComponent(bookID) + "&userEmail=" + encodeURIComponent(userEmail));
            } else {
                // Oznacz jako ulubioną
                button.classList.add("favorite");
                button.textContent = "Usuń z ulubionych";

                // Wywołaj skrypt lub serwlet do dodania książki do ulubionych w bazie danych
                // Przykład z użyciem AJAX

                var xhr = new XMLHttpRequest();
                xhr.open("POST", "AddToFavoritesServlet", true);
                xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
                xhr.onreadystatechange = function() {
                    if (xhr.readyState === 4 && xhr.status === 200) {
                        console.log(xhr.responseText);
                    }
                };
                xhr.send("bookID=" + encodeURIComponent(bookID) + "&userEmail=" + encodeURIComponent(userEmail));
            }
        }

        function confirmLogout() {
            if (confirm("Czy na pewno chcesz się wylogować?")) {
                window.location.href = "logout";
            }
        }
    </script>

    <footer>
        <p>(c) 2023 Biblioteka Publiczna. Wszelkie prawa zastrzeżone.</p>
    </footer>
</body>

</html>
